name: "EA Hub Ingest Build & Test"

on:
  # Trigger on pull request creation or updates
  pull_request:

  push:
  
  workflow_dispatch:

jobs:
  # Job for pull request validation
  validate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3 
        
      - name: Generate Docker Tags
        id: docker-tags
        run: |
          # Define base tag (e.g., based on branch or event)
          if [[ "${{ github.ref_name }}" == "main" ]]; then
            echo "IMAGE_TAG=latest" >> $GITHUB_ENV
          else
            SHORT_SHA=$(echo "${{ github.sha }}" | cut -c1-7)
            echo "IMAGE_TAG=dev-${SHORT_SHA}" >> $GITHUB_ENV
            echo "IMAGE_TAG=dev-${SHORT_SHA}" >> .env
          fi
          # Generate unique tag with SHA or timestamp
          

      - name: Build image
        run: echo "POSTGRES_PASSWORD=sometestdbpassword" >> .env && docker compose build

      - name: Run tests
        run: docker compose up --exit-code-from ea-hub-ingest

  push_to_registry:
    name: Push Docker image to Docker Hub
    if: ${{ github.event.pull_request.merged }}
    needs: validate
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: muziqhed/event-analytics-hub-ingest

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          push: true
          tags: muziqhed/event-analytics-hub-ingest:${{ env.IMAGE_TAG }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
